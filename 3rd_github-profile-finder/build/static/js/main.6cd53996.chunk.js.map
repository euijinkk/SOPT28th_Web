{"version":3,"sources":["components/card.jsx","components/search.jsx","lib/api.jsx","common/globalStyle.jsx","components/history.jsx","components/result.jsx","lib/repoApi.jsx","App.jsx","index.jsx"],"names":["Container","styled","section","Card","userData","setUserState","repos","reposContainer","useRef","repoModal","className","onClick","console","log","src","avatar_url","alt","login","bio","href","html_url","target","followers","following","ref","current","style","visibility","classList","remove","add","public_repos","slice","map","repo","index","name","id","Form","form","Search","getUser","useState","userName","setUserName","inputBox","onSubmit","event","preventDefault","value","type","placeholder","onChange","getUserData","a","axios","get","data","GlobalStyle","createGlobalStyle","History","userState","userList","setUserList","useEffect","localStorage","setItem","JSON","stringify","onHistoryClick","e","parse","innerText","deleteHistory","historyDiv","parentNode","tagName","removeItem","result","i","length","push","key","getItem","rendering","Result","status","color","fontSize","getUserRepos","App","Error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cd53996.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Card = ({ userData, setUserState, repos }) => {\n    const reposContainer = useRef();\n    const repoModal = useRef();\n\n    const closeCard = () => {\n        console.log(setUserState);\n        setUserState({});\n    };\n    // 효율적인 모달 방법을 알고싶다..!\n    const popUpModal = () => {\n        repoModal.current.style.visibility = 'visible';\n        repoModal.current.classList.remove('hidden');\n        repoModal.current.classList.add('visible');\n    };\n    const hideModal = () => {\n        repoModal.current.style.visibility = 'hidden';\n        repoModal.current.classList.remove('visible');\n        repoModal.current.classList.add('hidden');\n    };\n    return (\n        userData && (\n            <Container>\n                <button className=\"closeBtn\" onClick={closeCard}>\n                    X\n                </button>\n                <img src={userData.avatar_url} alt=\"\" />\n                <p className=\"login\">{userData.login}</p>\n                <p className=\"bio\">{userData.bio}</p>\n                <a className=\"link\" href={userData.html_url} target=\"_blank\">\n                    Visit GitHub\n                </a>\n                <div className=\"metaData\">\n                    <div className=\"followers box\">\n                        <p className=\"box__text\">Followers</p>\n                        <p className=\"box__num\">{userData.followers}</p>\n                    </div>\n                    <div className=\"following box\">\n                        <p className=\"box__text\">Following</p>\n                        <p className=\"box__num\">{userData.following}</p>\n                    </div>\n                    <div\n                        className=\"repos box\"\n                        ref={reposContainer}\n                        onClick={popUpModal}\n                    >\n                        <p className=\"box__text\">Repos</p>\n                        <p className=\"box__num\">{userData.public_repos}</p>\n                    </div>\n                    <div className=\"repo--modal hidden\" ref={repoModal}>\n                        <div className=\"overlay\" onClick={hideModal}></div>\n                        <div className=\"modal__text\">\n                            Click repository Links\n                            {repos &&\n                                repos.slice(0, 10).map((repo, index) => (\n                                    <a\n                                        key={repo.id}\n                                        href={repo.html_url}\n                                        target=\"_blank\"\n                                    >\n                                        <tr>\n                                            <td>{index + 1} -&nbsp;</td>\n                                            <td> {repo.name}</td>\n                                        </tr>\n                                    </a>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n            </Container>\n        )\n    );\n};\n\nconst Container = styled.section`\n    background-color: skyblue;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    // padding: 0 20px;\n    // padding-bottom: 10px;\n    width: 398px;\n    animation-name: comingDown;\n    animation-duration: 1s;\n    position: relative;\n\n    @keyframes comingDown {\n        from {\n            transform: translateY(-10%);\n            opacity: 0;\n        }\n        to {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n\n    .closeBtn {\n        background-color: transparent;\n        position: absolute;\n        top: 8px;\n        right: 8px;\n        color: white;\n        font-size: 24px;\n        cursor: pointer;\n    }\n    img {\n        width: 200px;\n        height: 200px;\n        margin: 20px 0px;\n        border-radius: 50%;\n        border: 2px solid black;\n        padding: 5px;\n    }\n\n    .login {\n        font-size: 24px;\n        font-weight: bold;\n    }\n\n    .bio {\n        display: block;\n        font-size: 20px;\n        margin: 20px 0px;\n        padding: 0px 20px;\n        width: 100%;\n        text-align: center;\n    }\n    .link {\n        background-color: transparent;\n        border: 2px solid yellow;\n        border-radius: 4px;\n        color: yellow;\n        font-size: 20px;\n        margin-bottom: 12px;\n        cursor: pointer;\n        padding: 6px;\n        &:hover {\n            background-color: yellow;\n            color: black;\n        }\n    }\n\n    .metaData {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n\n        .box {\n            cursor: pointer;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            margin-right: 4px;\n            background-color: #231e39;\n            color: white;\n            &:hover {\n                transform: scale(1.07);\n            }\n            transition: transform 300ms ease-in;\n            // flex-basis:33%;\n            width: 130px;\n            padding: 10px;\n            .box__text {\n                font-size: 20px;\n            }\n            .box__num {\n                font-size: 20px;\n            }\n        }\n        .repos {\n            margin-right: 0px;\n        }\n    }\n    .hidden {\n        visibility: hidden;\n    }\n    .visible {\n        /* background-color: black; */\n        animation: popUp 300ms;\n        & > .overlay {\n            background-color: gray;\n            opacity: 0.7;\n            position: fixed;\n            top: 0px;\n            left: 0px;\n            width: 100%;\n            height: 100%;\n        }\n        & > .modal__text {\n            background-color: skyblue;\n            z-index: 1;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            border-radius: 10px;\n            width: 300px;\n            height: 250px;\n        }\n    }\n    @keyframes popUp {\n        from {\n            opacity: 0;\n            transform: translateY(60%);\n        }\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n    .repo--modal {\n        position: fixed;\n        /* left: 10px; */\n        top: 30%;\n        display: flex;\n        flex-direction: column;\n        font-size: 20px;\n\n        a {\n            font-size: 16px;\n        }\n    }\n`;\n\nexport default Card;\n","import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Search = ({ getUser }) => {\n    const [userName, setUserName] = useState('');\n    // const inputForm = useRef();\n    // const getId = (event) => {\n    //     event.preventDefault();\n    //     console.log(inputForm.current.value);\n    //     onSearch(inputForm.current.value);\n    //     // inputForm.current.value = '';\n    // };\n    const inputBox = useRef();\n    const handleChange = (event) => {\n        setUserName(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        getUser(userName);\n        setUserName('');\n        inputBox.current.value = '';\n        // inputBox.current.focus();\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"GitHub ID를 입력하세요.\"\n                onChange={handleChange}\n                ref={inputBox}\n            />\n        </Form>\n    );\n};\n\nconst Form = styled.form`\n    input {\n        width: 300px;\n        height: 26px;\n        border: 4px solid #231e39;\n        margin-bottom: 10px;\n    }\n`;\n\nexport default Search;\n","import axios from 'axios';\n\n/************* baseURL 사용하는 방식 **************/\n/* const client = axios.create({\n *   baseURL: \"https://api.github.com/users/\",\n * });\n */\n\n// api 요청은 비동기로 처리하므로 async, await을 사용합니다\n// 함수 앞에 export를 바로 사용하면, import 할 때는 { getUserData }로 받아옵니다\nexport const getUserData = async (name) => {\n    // name은 깃허브 아이디\n    try {\n        // const { data } = await client.get(name); -> baseURL을 사용할 경우\n        const { data } = await axios.get(\n            'https://api.github.com/users/' + name\n        );\n        console.log('[SUCCESS] GET user data', data);\n        return data;\n    } catch (e) {\n        console.log('[FAIL] GET user data', e);\n        return null;\n    }\n};\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  *{\n    box-sizing: border-box;\n  }\n  html,body{\n      margin:0px;\n      height:100%;\n  }\n  p {\n      margin:0px;\n  }\n\n  button {\n    outline: 0;\n    border:0;\n  }\n\n  a{\n    text-decoration: none;\n    outline:0;\n    color: white;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst History = ({ userState, setUserState }) => {\n    const [userList, setUserList] = useState(0);\n    console.log(userState);\n\n    useEffect(() => {\n        localStorage.setItem([userState.data.login], JSON.stringify(userState));\n        // setUserList([...userList, userState.data.login]);\n\n        setUserList((userList) => userList + 1);\n        console.log(userState.data.login);\n        console.log(userList);\n    }, [userState]);\n\n    // setUserList([userState.data]);\n\n    const onHistoryClick = (e) => {\n        // console.log(e.target.innerText);\n        setUserState(JSON.parse(localStorage[e.target.innerText]));\n    };\n\n    const deleteHistory = (e) => {\n        let historyDiv =\n            e.target.parentNode.tagName === 'DIV'\n                ? e.target.parentNode\n                : e.target.parentNode.parentNode.tagName === 'DIV'\n                ? e.target.parentNode.parentNode\n                : e.target.parentNode.parentNode.parentNode;\n        console.log(historyDiv.innerText);\n\n        localStorage.removeItem(historyDiv.innerText);\n        setUserList((userList) => userList + 1);\n        // setUserList((userList) =>\n        //     userList.filter((item) => item !== historyDiv.innerText)\n        // );\n        // console.log(userList);\n    };\n\n    // (e.target.parentNode.parentNode.tag ===\"DIV\" ? e.target.parentNode.parentNode )\n    const rendering = () => {\n        const result = [];\n        for (let i = 0; i < localStorage.length; i++) {\n            result.push(\n                <div\n                    key={\n                        JSON.parse(localStorage.getItem(localStorage.key(i)))\n                            .data.id\n                    }\n                    className=\"history\"\n                >\n                    <div className=\"id\" onClick={onHistoryClick}>\n                        {localStorage.key(i)}\n                    </div>\n                    <button onClick={deleteHistory}>\n                        <i className=\"fas fa-trash\"></i>\n                    </button>\n                </div>\n            );\n        }\n        return result;\n    };\n    return (\n        <Container>\n            <div className=\"history__text\">History</div>\n            {rendering()}\n        </Container>\n    );\n};\n\nconst Container = styled.section`\n    position: fixed;\n    top: 20%;\n    left: 10px;\n    width: 140px;\n\n    .history__text {\n        font-size: 24px;\n        color: white;\n    }\n    .history {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 8px;\n        .id {\n            cursor: pointer;\n            /* margin-top: 8px; */\n            margin-right: 5px;\n            &:hover {\n                color: blue;\n            }\n        }\n        button {\n            background-color: transparent;\n            /* padding: 0px; */\n        }\n        svg {\n            cursor: pointer;\n\n            &:hover {\n                color: red;\n            }\n        }\n    }\n`;\n\nexport default History;\n","import React from 'react';\nimport Card from './card';\nimport History from './history';\n\nconst Result = ({ userState, setUserState }) => {\n    const { status, data, repos } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n    switch (\n        status // status의 값에 따라 다른 컴포넌트를 불러옵니다\n    ) {\n        case 'pending': // 아직 Promise 결과가 도착하지 않은 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    Loading...\n                </div>\n            );\n\n        case 'resolved': // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n            return (\n                <>\n                    <Card\n                        userData={data}\n                        setUserState={setUserState}\n                        repos={repos}\n                    />\n                    <History\n                        userState={userState}\n                        setUserState={setUserState}\n                    />\n                </>\n            );\n\n        case 'rejected': // API 요청에 실패한 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    User Not Found\n                </div>\n            );\n\n        case 'idle':\n        default:\n            return <div></div>;\n    }\n};\n\nexport default Result;\n","import axios from 'axios';\n\n/************* baseURL 사용하는 방식 **************/\n/* const client = axios.create({\n *   baseURL: \"https://api.github.com/users/\",\n * });\n */\n\n// api 요청은 비동기로 처리하므로 async, await을 사용합니다\n// 함수 앞에 export를 바로 사용하면, import 할 때는 { getUserData }로 받아옵니다\nexport const getUserRepos = async (name) => {\n    // name은 깃허브 아이디\n    try {\n        // const { data } = await client.get(name); -> baseURL을 사용할 경우\n        const { data } = await axios.get(\n            `https://api.github.com/users/${name}/repos`\n        );\n        console.log('[SUCCESS] GET repos', data);\n        return data;\n    } catch (e) {\n        console.log('[FAIL] GET user data', e);\n        return null;\n    }\n};\n","import { useEffect, useState } from 'react';\nimport Card from './components/card';\n// import Hello from './components/hello';\nimport Search from './components/search';\nimport { getUserData } from './lib/api';\nimport styled from 'styled-components';\nimport GlobalStyle from './common/globalStyle';\nimport Result from './components/result';\nimport { getUserRepos } from './lib/repoApi';\n\nfunction App() {\n    // const [userId, setUserId] = useState(null);\n\n    const [userState, setUserState] = useState({\n        // 처음에는 data만 저장했지만, status도 함께 저장합니다\n        status: 'idle',\n        data: null,\n        repos: null,\n    });\n\n    // const getUser = async (name) => {\n    //   const data = await getUserData(name);\n    //   setUserData(data);\n    //   // 왜 api 에서 이미 async await 로 불러왔는데 여기서도 async await 를 써야할까?\n    // }\n    const getUser = async (name) => {\n        setUserState({ ...userState, status: 'pending' }); // 아직 데이터를 불러오기 전이므로 상태를 pending으로 바꿉니다.\n        // ... 는 Spread 연산자로서, 객체의 property를 오버라이딩(업데이트)합니다\n        // status와 같이 이미 존재하는 property값을 수정한 경우, 이를 제외한 나머지 property들(data)이 그대로 반환되며,\n        // 기존에 없던 property를 작성한 경우, 객체에 새로 추가됩니다.\n        try {\n            const data = await getUserData(name);\n            const repos = await getUserRepos(name);\n\n            if (data === null) throw Error; // API 요청에 실패한 경우에는 data에 null이 반환됩니다\n\n            setUserState({ status: 'resolved', data: data, repos: repos });\n        } catch (e) {\n            setUserState({ status: 'rejected', data: null, repos: null });\n            console.log(e);\n        }\n    };\n\n    return (\n        <Container>\n            <GlobalStyle />\n            <p className=\"title\">GitHub Profile Finder</p>\n            <Search getUser={getUser} />\n            <Result userState={userState} setUserState={setUserState} />\n            {/* <Card userData ={userData}/> */}\n        </Container>\n    );\n}\n\nconst Container = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #349eeb;\n    width: 100%;\n    flex: 1;\n    height: 100%;\n\n    .title {\n        color: white;\n        font-size: 32px;\n    }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}