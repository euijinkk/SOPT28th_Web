{"ast":null,"code":"var _jsxFileName = \"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/result.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './card';\nimport History from './history';\nimport { useRecoilState } from 'recoil';\nimport { userData } from '../state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Result = () => {\n  _s();\n\n  const [userState, setUserState] = useRecoilState(userData);\n  const {\n    status,\n    data,\n    repos\n  } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n  // IUserState 타입을 가지고 오고 싶다.\n\n  switch (status // status의 값에 따라 다른 컴포넌트를 불러옵니다\n  ) {\n    case 'pending':\n      // 아직 Promise 결과가 도착하지 않은 경우\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          fontSize: '24px'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n\n    case 'resolved':\n      // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n\n    case 'rejected':\n      // API 요청에 실패한 경우\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          fontSize: '24px'\n        },\n        children: \"User Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n\n    case 'idle':\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n  }\n};\n\n_s(Result, \"VQNkwkWC0Qfp+UZ6aeZbv825XfM=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/result.tsx"],"names":["React","Card","History","useRecoilState","userData","Result","userState","setUserState","status","data","repos","color","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,QAAT,QAAyB,UAAzB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,cAAc,CAACC,QAAD,CAAhD;AACA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA0BJ,SAAhC,CAFiB,CAE0B;AAC3C;;AACA,UACIE,MADJ,CACW;AADX;AAGI,SAAK,SAAL;AAAgB;AACZ,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;;AAMJ,SAAK,UAAL;AAAiB;AACb,0BACI;AAAA,gCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ;;AAOJ,SAAK,UAAL;AAAiB;AACb,0BACI;AAAK,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;;AAMJ,SAAK,MAAL;AACA;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AA3BR;AA6BH,CAjCD;;GAAMP,M;UACgCF,c;;;KADhCE,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport Card from './card';\nimport History from './history';\nimport { useRecoilState } from 'recoil';\nimport { userData } from '../state';\n\nconst Result = () => {\n    const [userState, setUserState] = useRecoilState(userData);\n    const { status, data, repos } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n    // IUserState 타입을 가지고 오고 싶다.\n    switch (\n        status // status의 값에 따라 다른 컴포넌트를 불러옵니다\n    ) {\n        case 'pending': // 아직 Promise 결과가 도착하지 않은 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    Loading...\n                </div>\n            );\n\n        case 'resolved': // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n            return (\n                <>\n                    <Card />\n                    <History />\n                </>\n            );\n\n        case 'rejected': // API 요청에 실패한 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    User Not Found\n                </div>\n            );\n\n        case 'idle':\n        default:\n            return <div></div>;\n    }\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}