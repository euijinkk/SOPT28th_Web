{"ast":null,"code":"var _jsxFileName = \"/Users/Jin/Desktop/projects/SOPT28th_Web/3nd_github-profile-finder/src/components/result.jsx\";\nimport React from 'react';\nimport Card from './card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = ({\n  userState,\n  setUserData\n}) => {\n  const {\n    status,\n    data\n  } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n\n  switch (status // status의 값에 따라 다른 컴포넌트를 불러옵니다\n  ) {\n    case 'pending':\n      // 아직 Promise 결과가 도착하지 않은 경우\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          fontSize: '24px'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n\n    case 'resolved':\n      // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n      return /*#__PURE__*/_jsxDEV(Card, {\n        userData: data,\n        setUserData: setUserData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n\n    case 'rejected':\n      // API 요청에 실패한 경우\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          fontSize: '24px'\n        },\n        children: \"User Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n\n    case 'idle':\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n  }\n};\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/Jin/Desktop/projects/SOPT28th_Web/3nd_github-profile-finder/src/components/result.jsx"],"names":["React","Card","Result","userState","setUserData","status","data","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AAC3C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBH,SAAzB,CAD2C,CACP;;AAEpC,UACIE,MADJ,CACW;AADX;AAGI,SAAK,SAAL;AAAgB;AACZ,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;;AAMJ,SAAK,UAAL;AAAiB;AACb,0BAAO,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,IAAhB;AAAsB,QAAA,WAAW,EAAEF;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAP;;AAEJ,SAAK,UAAL;AAAiB;AACb,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;;AAMJ,SAAK,MAAL;AACA;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AAtBR;AAwBH,CA3BD;;KAAMN,M;AA6BN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport Card from './card';\n\nconst Result = ({ userState, setUserData }) => {\n    const { status, data } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n\n    switch (\n        status // status의 값에 따라 다른 컴포넌트를 불러옵니다\n    ) {\n        case 'pending': // 아직 Promise 결과가 도착하지 않은 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    Loading...\n                </div>\n            );\n\n        case 'resolved': // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n            return <Card userData={data} setUserData={setUserData} />;\n\n        case 'rejected': // API 요청에 실패한 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    User Not Found\n                </div>\n            );\n\n        case 'idle':\n        default:\n            return <div></div>;\n    }\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}