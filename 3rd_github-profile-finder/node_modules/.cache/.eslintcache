[{"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/common/globalStyle.jsx":"1","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/index.tsx":"2","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/App.tsx":"3","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/lib/repoApi.tsx":"4","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/search.tsx":"5","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/result.tsx":"6","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/lib/api.tsx":"7","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/state/index.ts":"8","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/history.tsx":"9","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/card.tsx":"10"},{"size":362,"mtime":1620698710424,"results":"11","hashOfConfig":"12"},{"size":363,"mtime":1625143508465,"results":"13","hashOfConfig":"12"},{"size":1875,"mtime":1633239348656,"results":"14","hashOfConfig":"12"},{"size":907,"mtime":1625196366147,"results":"15","hashOfConfig":"12"},{"size":1452,"mtime":1625190374782,"results":"16","hashOfConfig":"12"},{"size":1327,"mtime":1625190508179,"results":"17","hashOfConfig":"12"},{"size":909,"mtime":1625196361473,"results":"18","hashOfConfig":"12"},{"size":244,"mtime":1625191283796,"results":"19","hashOfConfig":"12"},{"size":3311,"mtime":1625195145374,"results":"20","hashOfConfig":"12"},{"size":5351,"mtime":1633238981572,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1xx82aq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/common/globalStyle.jsx",[],["46","47"],"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/index.tsx",[],["48","49"],"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/App.tsx",[],"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/lib/repoApi.tsx",[],"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/search.tsx",[],"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/result.tsx",["50","51","52"],"import React from 'react';\nimport Card from './card';\nimport History from './history';\nimport { useRecoilState } from 'recoil';\nimport { userData } from '../state';\n\nconst Result = () => {\n    const [userState, setUserState] = useRecoilState(userData);\n    const { status, data, repos } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n    // IUserState 타입을 가지고 오고 싶다.\n    switch (\n        status // status의 값에 따라 다른 컴포넌트를 불러옵니다\n    ) {\n        case 'pending': // 아직 Promise 결과가 도착하지 않은 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    Loading...\n                </div>\n            );\n\n        case 'resolved': // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n            return (\n                <>\n                    <Card />\n                    <History />\n                </>\n            );\n\n        case 'rejected': // API 요청에 실패한 경우\n            return (\n                <div style={{ color: 'white', fontSize: '24px' }}>\n                    User Not Found\n                </div>\n            );\n\n        case 'idle':\n        default:\n            return <div></div>;\n    }\n};\n\nexport default Result;\n","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/lib/api.tsx",[],"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/state/index.ts",[],"/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/history.tsx",["53"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { userData } from '../state';\n\nconst History = () => {\n    const [userState, setUserState] = useRecoilState(userData);\n    const [userList, setUserList] = useState(0);\n\n    useEffect(() => {\n        userState.data &&\n            localStorage.setItem(\n                userState.data.login,\n                JSON.stringify(userState)\n            );\n    }, [userState]);\n\n    const onHistoryClick = (\n        e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n        const target = e.target as HTMLDivElement;\n        setUserState(JSON.parse(localStorage[target.innerText]));\n    };\n\n    const deleteHistory = (\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n        const target = e.target as HTMLElement;\n        console.log(target.parentElement);\n        let historyDiv =\n            target.parentElement?.tagName === 'DIV'\n                ? target.parentElement\n                : target.parentElement?.parentElement?.tagName === 'DIV'\n                ? target.parentElement?.parentElement\n                : target.parentElement?.parentElement?.parentElement;\n        console.log(historyDiv?.innerText);\n\n        historyDiv?.innerText && localStorage.removeItem(historyDiv?.innerText);\n        setUserList((userList) => userList + 1);\n    };\n\n    // (e.target.parentNode.parentNode.tag ===\"DIV\" ? e.target.parentNode.parentNode )\n    const rendering = () => {\n        const result = [];\n        for (let i = 0; i < localStorage.length; i++) {\n            result.push(\n                <div\n                    key={\n                        localStorage.key(i) !== null &&\n                        localStorage.getItem(localStorage.key(i) || '[]') &&\n                        JSON.parse(\n                            localStorage.getItem(localStorage.key(i) || '[]') ||\n                                '[]'\n                        ).data.id\n                    }\n                    className=\"history\"\n                >\n                    <div className=\"id\" onClick={onHistoryClick}>\n                        {localStorage.key(i)}\n                    </div>\n                    <button onClick={deleteHistory}>\n                        <i className=\"fas fa-trash\"></i>\n                    </button>\n                </div>\n            );\n        }\n        return result;\n    };\n    return (\n        <Container>\n            <div className=\"history__text\">History</div>\n            {rendering()}\n        </Container>\n    );\n};\n\nconst Container = styled.section`\n    position: fixed;\n    top: 20%;\n    left: 10px;\n    width: 140px;\n\n    .history__text {\n        font-size: 24px;\n        color: white;\n    }\n    .history {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 8px;\n        .id {\n            cursor: pointer;\n            /* margin-top: 8px; */\n            margin-right: 5px;\n            &:hover {\n                color: blue;\n            }\n        }\n        button {\n            background-color: transparent;\n            /* padding: 0px; */\n        }\n        svg {\n            cursor: pointer;\n\n            &:hover {\n                color: red;\n            }\n        }\n    }\n`;\n\nexport default History;\n","/Users/Jin/Desktop/projects/SOPT28th_Web/3rd_github-profile-finder/src/components/card.tsx",["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":23,"nodeType":"62","messageId":"63","endLine":8,"endColumn":35},{"ruleId":"60","severity":1,"message":"64","line":9,"column":21,"nodeType":"62","messageId":"63","endLine":9,"endColumn":25},{"ruleId":"60","severity":1,"message":"65","line":9,"column":27,"nodeType":"62","messageId":"63","endLine":9,"endColumn":32},{"ruleId":"60","severity":1,"message":"66","line":8,"column":12,"nodeType":"62","messageId":"63","endLine":8,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":36,"column":9,"nodeType":"69","endLine":36,"endColumn":66},{"ruleId":"67","severity":1,"message":"68","line":58,"column":19,"nodeType":"69","endLine":58,"endColumn":73},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'setUserState' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'repos' is assigned a value but never used.","'userList' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]