{"ast":null,"code":"var _jsxFileName = \"/Users/Jin/Desktop/projects/SOPT28th_Web/3nd_github-profile-finder/src/components/result.jsx\";\nimport React from \"react\";\nimport Card from \"./card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = ({\n  userState\n}) => {\n  const {\n    status,\n    data\n  } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n\n  switch (status) {\n    // status의 값에 따라 다른 컴포넌트를 불러옵니다\n    case \"pending\":\n      // 아직 Promise 결과가 도착하지 않은 경우\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"white\",\n          fontSize: \"24px\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }, this);\n\n    case \"resolved\":\n      // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n      return /*#__PURE__*/_jsxDEV(Card, {\n        userData: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }, this);\n\n    case \"rejected\":\n      // API 요청에 실패한 경우\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"white\",\n          fontSize: \"24px\"\n        },\n        children: \"User Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n\n    case \"idle\":\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this);\n  }\n};\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/Jin/Desktop/projects/SOPT28th_Web/3nd_github-profile-finder/src/components/result.jsx"],"names":["React","Card","Result","userState","status","data","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBF,SAAzB,CAD8B,CACM;;AAEpC,UAAQC,MAAR;AAAkB;AAChB,SAAK,SAAL;AAAgB;AACd,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AAEF,SAAK,UAAL;AAAiB;AACf,0BAAO,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;;AAEF,SAAK,UAAL;AAAiB;AACf,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AAIF,SAAK,MAAL;AACA;AACE,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AAdJ;AAgBD,CAnBH;;KAAML,M;AAqBJ,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport Card from \"./card\";\n\nconst Result = ({ userState }) => {\n    const { status, data } = userState; // 구조분해할당을 통해 status와 data를 따로 가져옵니다\n  \n    switch (status) { // status의 값에 따라 다른 컴포넌트를 불러옵니다\n      case \"pending\": // 아직 Promise 결과가 도착하지 않은 경우\n        return <div style={{ color: \"white\", fontSize: \"24px\" }}>Loading...</div>;\n  \n      case \"resolved\": // API 요청에 성공하여 데이터가 정상적으로 도착한 경우\n        return <Card userData={data} />;\n  \n      case \"rejected\": // API 요청에 실패한 경우\n        return (\n          <div style={{ color: \"white\", fontSize: \"24px\" }}>User Not Found</div>\n        );\n  \n      case \"idle\": \n      default:\n        return <div></div>;\n    }\n  };\n\n  export default Result;"]},"metadata":{},"sourceType":"module"}